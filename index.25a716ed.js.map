{"mappings":"C,A,WUAA,SAAS,EAAqB,CAAG,CAAE,CAAG,EAC9B,CAAA,AAAO,MAAP,GAAe,EAAM,EAAI,MAAM,AAAN,GAAQ,CAAA,EAAM,EAAI,MAAM,AAAN,EAE/C,IAAK,IAAI,EAAI,EAAG,EAAO,AAAI,MAAM,GAAM,EAAI,EAAK,IAAK,CAAI,CAAC,EAAE,CAAG,CAAG,CAAC,EAAE,CAErE,OAAO,CACX,CDJA,SAAS,EAA+B,CAAC,CAAE,CAAM,EAC7C,GAAK,GACL,GAAI,AAAa,UAAb,OAAO,EAAgB,OAAO,AAAA,EAAqB,EAAG,GAE1D,IAAI,EAAI,OAAO,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC,EAAG,IAGnD,GADU,WAAN,GAAkB,EAAE,WAAW,EAAE,CAAA,EAAI,EAAE,WAAW,CAAC,IAAI,AAAJ,EACnD,AAAM,QAAN,GAAe,AAAM,QAAN,EAAa,OAAO,MAAM,IAAI,CAAC,GAClD,GAAI,AAAM,cAAN,GAAqB,2CAA2C,IAAI,CAAC,GAAI,OAAO,AAAA,EAAqB,EAAG,GAChH,CENA,SAAS,EAAqB,CAAG,EAC7B,OAAO,AAAA,SCJmB,CAAG,EAC7B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,AAAA,EAAqB,EACxD,EDEgC,IAAQ,AAAA,SENZ,CAAI,EAC5B,GAAI,AAAkB,aAAlB,OAAO,QAA0B,AAAyB,MAAzB,CAAI,CAAC,OAAO,QAAQ,CAAC,EAAY,AAAsB,MAAtB,CAAI,CAAC,aAAa,CACpF,OAAO,MAAM,IAAI,CAAC,EAE1B,EFE2D,IAAQ,AAAA,EAA+B,IAAQ,AAAA,WGLtG,MAAM,AAAI,UAAU,uIACxB,GHKA,CVJA,IAAM,EAAO,GCDP,WAAA,EAAN,CAAA,eESoC,EFT9B,SAAA,IAGF,IAAA,EAAA,UAAA,MAAA,CAAA,GAAA,AAAA,KAAA,IAAA,SAAA,CAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAe,CACb,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACZ,CAAC,EAAG,EAAG,EAAG,EAAE,CACb,EARC,AAAA,SCFqB,CAAQ,CAAE,CAAW,EAC5C,GAAI,CAAE,CAAA,aAAoB,CAAA,EAAc,MAAM,AAAI,UAAU,oCAChE,EDAM,IAAA,CAAA,GAUF,IAAI,CAAC,IAAI,CAAG,EACZ,IAAI,CAAC,YAAY,CAAG,EAAa,GAAG,CAAC,SAAC,CAAtC,EAA+C,OAAA,AAAA,EAAG,E,GAClD,IAAI,CAAC,KAAK,CAAG,EAAa,GAAG,CAAC,SAAC,CAA/B,EAAwC,OAAA,AAAA,EAAG,E,GAC3C,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,C,CAdX,OES8B,EFT9B,C,CAiBJ,IAAA,WAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,OACZ,C,E,CAEA,IAAA,YAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,QACZ,C,E,CAEA,IAAA,WAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,OACZ,C,E,CAEA,IAAA,SAAA,MAAA,WACE,IAAI,CAAC,IAAI,CAAC,KACZ,C,E,CAEA,IAAA,OAAA,MAAA,SAAK,CAAS,EACZ,GAAI,AAAgB,YAAhB,IAAI,CAAC,MAAM,EAMf,IAAK,IAFC,EAAY,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,SAAC,CAAlC,EAA2C,OAAA,AAAA,EAAG,E,GAErC,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAAK,CAGlC,IAAK,IAFD,EAAO,EAAE,CAEJ,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAAK,CAClC,IAAI,EAAM,EACN,EAAM,CAEQ,CAAA,UAAd,GACF,CAAA,EAAM,IAAI,CAAC,IAAI,CAAG,EAAI,CAAA,EAGN,SAAd,IACF,EAAM,IAAI,CAAC,IAAI,CAAG,EAAI,EACtB,EAAM,GAGU,OAAd,IACF,EAAM,EACN,EAAM,GAGU,SAAd,IACF,EAAM,EACN,EAAM,GAGR,IAAM,EAAQ,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,AAEpB,CAAA,IAAV,GACF,EAAK,IAAI,CAAC,EAEd,CAEA,EAAO,IAAI,CAAC,aAAa,CAAC,GAE1B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAAK,CAClC,IAAI,EAAM,EACN,EAAM,CAEQ,CAAA,UAAd,GACF,CAAA,EAAM,IAAI,CAAC,IAAI,CAAG,EAAI,CADxB,EAIkB,SAAd,IACF,EAAM,IAAI,CAAC,IAAI,CAAG,EAAI,EACtB,EAAM,GAGU,OAAd,IACF,EAAM,EACN,EAAM,GAGU,SAAd,IACF,EAAM,EACN,EAAM,GAGR,IAAI,CAAC,KAAK,CAAC,EAAI,CAAC,EAAI,CAAG,CAAI,CAAC,EAAE,EAAI,CACpC,CACF,CAEK,IAAI,CAAC,YAAY,CAAC,EAAW,IAAI,CAAC,KAAK,GAC1C,IAAI,CAAC,eAAe,GAEtB,IAAI,CAAC,SAAS,GAChB,C,E,CAEA,IAAA,gBAAA,MAAA,SAAc,CAAM,EAClB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,IAAI,CAAC,KAAK,EAAI,CAAM,CAAC,EAAE,CACvB,EAAO,MAAM,CAAC,EAAI,EAAG,IAIzB,KAAO,EAAO,MAAM,CAAG,IAAI,CAAC,IAAI,EAC9B,EAAO,IAAI,CAAC,GAGd,OAAO,CACT,C,E,CAEA,IAAA,eAAA,MAAA,SAAa,CAAM,CAAE,CAAM,EACzB,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,GAAI,CAAM,CAAC,EAAE,CAAC,EAAE,GAAK,CAAM,CAAC,EAAE,CAAC,EAAE,CAC/B,MAAO,CAAA,EAKb,MAAO,CAAA,CACT,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,WAAA,MAAA,WACE,OAAO,IAAI,CAAC,KAAK,AACnB,C,E,CAEA,IAAA,YAAA,MAAA,WAKE,MAJoB,YAAhB,IAAI,CAAC,MAAM,EACb,IAAI,CAAC,OAAO,GAGP,IAAI,CAAC,MAAM,AACpB,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,GAAI,AAAqB,OAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAW,CAC7B,IAAI,CAAC,MAAM,CAAG,MAEd,MACF,CAIJ,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,GAAI,AAAqB,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAQ,CAC1B,IAAI,CAAC,MAAM,CAAG,UAEd,MACF,CAIJ,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAG,EAAG,IACjC,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAI,EAAE,CAAE,CAC7C,IAAI,CAAC,MAAM,CAAG,UAEd,MACF,CAIJ,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAG,EAAG,IACjC,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,GAAI,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,GAAK,IAAI,CAAC,KAAK,CAAC,EAAI,EAAE,CAAC,EAAE,CAAE,CAC7C,IAAI,CAAC,MAAM,CAAG,UAEd,MACF,CAIJ,IAAI,CAAC,MAAM,CAAG,MAChB,C,E,CAEA,IAAA,QAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAAG,UACd,IAAI,CAAC,eAAe,GACpB,IAAI,CAAC,eAAe,EACtB,C,E,CAEA,IAAA,UAAA,MAAA,WACE,IAAI,CAAC,MAAM,CAAG,OACd,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,SAAC,CAApC,EAA6C,OAAA,AAAA,EAAG,E,GAChD,IAAI,CAAC,KAAK,CAAG,CACf,C,E,CAEA,IAAA,kBAAA,MAAA,WAGE,IAAK,IAFC,EAAa,EAAE,CAEZ,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IAC7B,IAAK,IAAI,EAAI,EAAG,EAAI,IAAI,CAAC,IAAI,CAAE,IACJ,IAArB,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,EAClB,EAAW,IAAI,CAAC,CAAC,EAAG,EAAE,EAK5B,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,IGzNoB,EHyNd,EAAc,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EACjD,EGzNV,AAAA,SCNgB,CAAG,EAC1B,GAAI,MAAM,OAAO,CAAC,GAAM,OAAO,CACnC,EDG0B,EH0NL,CAAU,CAAC,EAAY,GGzNP,AAAA,SENH,CAAG,CAAE,CAAC,EACpC,IAOI,EAAI,EAPJ,EAAK,AAAO,MAAP,EAAc,KAAO,AAAkB,aAAlB,OAAO,QAA0B,CAAG,CAAC,OAAO,QAAQ,CAAC,EAAI,CAAG,CAAC,aAAa,CAExG,GAAI,AAAM,MAAN,GAEJ,IAAI,EAAO,EAAE,CACT,EAAK,CAAA,EACL,EAAK,CAAA,EAGT,GAAI,CACA,IAAK,EAAK,EAAG,IAAI,CAAC,GAAM,CAAE,CAAA,EAAM,AAAA,CAAA,EAAK,EAAG,IAAI,EAAA,EAAI,IAAI,AAAJ,IAC5C,EAAK,IAAI,CAAC,EAAG,KAAK,EACT,ALkNuB,IKlNvB,EAAK,MAAM,EAF+B,EAAK,CAAA,GAIhE,CAAE,MAAO,EAAK,CACV,EAAK,CAAA,EACL,EAAK,CACT,QAAU,CACN,GAAI,CACK,GAAM,AAAgB,MAAhB,EAAG,MAAS,EAAU,EAAG,MAAS,EACjD,QAAU,CACN,GAAI,EAAI,MAAM,CAClB,CACJ,CAEA,OAAO,EACX,EFrB8D,EHyNlB,IGzN6B,AAAA,EAA+B,EHyN5D,IGzNuE,AAAA,WGL/G,MAAM,AAAI,UAAU,4IACxB,IN6Na,EAAQ,CAAA,CAAA,EAAA,CAAL,EAAK,CAAf,CAAA,EAAA,AAEA,CAAA,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,CAAG,IAAI,CAAC,oBAAoB,EAC9C,CACF,C,E,CAEA,IAAA,uBAAA,MAAA,WACE,OAAO,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACnC,C,E,CE3NkB,AAZpB,SAA2B,CAAM,CAAE,CAAK,EACpC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAM,MAAM,CAAE,IAAK,CACnC,IAAI,EAAa,CAAK,CAAC,EAAE,AACzB,CAAA,EAAW,UAAU,CAAG,EAAW,UAAU,EAAI,CAAA,EACjD,EAAW,YAAY,CAAG,CAAA,EAEtB,UAAW,GAAY,CAAA,EAAW,QAAQ,CAAG,CAAA,CAAjD,EAEA,OAAO,cAAc,CAAC,EAAQ,EAAW,GAAG,CAAE,EAClD,CACJ,EAEsC,AFVhC,EEU4C,SAAS,CAAE,GFVvD,C,G,EDEA,EAAW,MAAM,IAAI,CAAC,SAAS,gBAAgB,CAAC,gBAChD,EAAS,SAAS,aAAa,CAAC,UAChC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBACpC,EAAQ,SAAS,aAAa,CAAC,eA0CrC,SAAS,EAAY,CAAK,EACxB,EAAM,OAAO,CAAC,SAAC,CAAA,CAAK,CAApB,EACE,EAAI,OAAO,CAAC,SAAC,CAAA,CAAO,CAApB,EAEE,IAAM,EAAU,CAAQ,CADV,AAAW,EAAX,EAAe,EACE,AAE3B,AAAU,CAAA,IAAV,GACF,EAAQ,SAAS,CAAG,0BAAgC,MAAA,CAAN,GAC9C,EAAQ,WAAW,CAAG,GAAS,MAAA,CAAN,KAEzB,EAAQ,SAAS,CAAG,aACpB,EAAQ,WAAW,CAAG,GAE1B,EACF,EACF,CAEA,SAAS,IACa,QAAhB,EAAK,MAAM,EACb,EAAW,SAAS,CAAC,MAAM,CAAC,UAGV,SAAhB,EAAK,MAAM,EACb,EAAY,SAAS,CAAC,MAAM,CAAC,UAE/B,EAAM,SAAS,CAAI,GAAkB,MAAA,CAAhB,EAAK,QAAQ,GACpC,CAlEA,EAAO,gBAAgB,CAAC,QAAS,WAC/B,EAAK,OAAO,GACZ,EAAK,KAAK,GACV,EAAW,SAAS,CAAC,GAAG,CAAC,UACzB,EAAY,SAAS,CAAC,GAAG,CAAC,UAEC,UAAvB,EAAO,WAAW,GACpB,EAAa,KAAK,CAAC,OAAO,CAAG,OAC7B,EAAO,SAAS,CAAG,UACnB,EAAO,SAAS,CAAG,kBAErB,IACA,EAAY,EAAK,QAAQ,GAC3B,GAEA,SAAS,gBAAgB,CAAC,UAAW,SAAC,CAAtC,EACE,OAAQ,EAAE,GAAG,EACX,IAAK,UACH,EAAK,MAAM,GACX,EAAY,EAAK,QAAQ,IACzB,IACA,KACF,KAAK,YACH,EAAK,QAAQ,GACb,EAAY,EAAK,QAAQ,IACzB,IACA,KACF,KAAK,YACH,EAAK,QAAQ,GACb,EAAY,EAAK,QAAQ,IACzB,IACA,KACF,KAAK,aACH,EAAK,SAAS,GACd,EAAY,EAAK,QAAQ,IACzB,GAEJ,CACF,E","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$71511d61b312f219(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$71511d61b312f219(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$71511d61b312f219(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$71511d61b312f219(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$71511d61b312f219(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$71511d61b312f219(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$71511d61b312f219)(arr) || (0, $8ca2848f896a6803$export$71511d61b312f219)(arr, i) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr, i) || (0, $a0bc1859061deae1$export$71511d61b312f219)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$71511d61b312f219(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$71511d61b312f219)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$71511d61b312f219(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$71511d61b312f219() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$71511d61b312f219(arr) {\n    return (0, $c50969dc1df61e8b$export$71511d61b312f219)(arr) || (0, $09c9f293d010c0e1$export$71511d61b312f219)(arr) || (0, $d4f69c5c6c4654b1$export$71511d61b312f219)(arr) || (0, $38c2d4931cb7a7c4$export$71511d61b312f219)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$71511d61b312f219)(this, Game);\n        this.size = 4;\n        this.defaultBoard = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.board = initialState.map(function(row) {\n            return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n        });\n        this.status = \"idle\";\n        this.score = 0;\n    }\n    (0, $4fc75ccb937ab1df$export$71511d61b312f219)(Game, [\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                this.move(\"left\");\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                this.move(\"right\");\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                this.move(\"down\");\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                this.move(\"up\");\n            }\n        },\n        {\n            key: \"move\",\n            value: function move(direction) {\n                if (this.status !== \"playing\") return;\n                var prevBoard = this.board.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                for(var i = 0; i < this.size; i++){\n                    var line = [];\n                    for(var j = 0; j < this.size; j++){\n                        var row = i;\n                        var col = j;\n                        if (direction === \"right\") col = this.size - 1 - j;\n                        if (direction === \"down\") {\n                            row = this.size - 1 - j;\n                            col = i;\n                        }\n                        if (direction === \"up\") {\n                            row = j;\n                            col = i;\n                        }\n                        if (direction === \"left\") {\n                            row = i;\n                            col = j;\n                        }\n                        var value = this.board[row][col];\n                        if (value !== 0) line.push(value);\n                    }\n                    line = this.combineValues(line);\n                    for(var j1 = 0; j1 < this.size; j1++){\n                        var row1 = i;\n                        var col1 = j1;\n                        if (direction === \"right\") col1 = this.size - 1 - j1;\n                        if (direction === \"down\") {\n                            row1 = this.size - 1 - j1;\n                            col1 = i;\n                        }\n                        if (direction === \"up\") {\n                            row1 = j1;\n                            col1 = i;\n                        }\n                        if (direction === \"left\") {\n                            row1 = i;\n                            col1 = j1;\n                        }\n                        this.board[row1][col1] = line[j1] || 0;\n                    }\n                }\n                if (!this.isBoardEqual(prevBoard, this.board)) this.addRandomNumber();\n                this.getStatus();\n            }\n        },\n        {\n            key: \"combineValues\",\n            value: function combineValues(values) {\n                for(var i = 0; i < values.length - 1; i++)if (values[i] === values[i + 1]) {\n                    values[i] *= 2;\n                    this.score += values[i];\n                    values.splice(i + 1, 1);\n                }\n                while(values.length < this.size)values.push(0);\n                return values;\n            }\n        },\n        {\n            key: \"isBoardEqual\",\n            value: function isBoardEqual(board1, board2) {\n                for(var i = 0; i < this.size; i++)for(var j = 0; j < this.size; j++){\n                    if (board1[i][j] !== board2[i][j]) return false;\n                }\n                return true;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                if (this.status === \"playing\") this.canMove();\n                return this.status;\n            }\n        },\n        {\n            key: \"canMove\",\n            value: function canMove() {\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] === 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                }\n                for(var i1 = 0; i1 < this.size; i1++){\n                    for(var j1 = 0; j1 < this.size; j1++)if (this.board[i1][j1] === 0) {\n                        this.status = \"playing\";\n                        return;\n                    }\n                }\n                for(var i2 = 0; i2 < this.size; i2++){\n                    for(var j2 = 0; j2 < this.size - 1; j2++)if (this.board[i2][j2] === this.board[i2][j2 + 1]) {\n                        this.status = \"playing\";\n                        return;\n                    }\n                }\n                for(var i3 = 0; i3 < this.size - 1; i3++){\n                    for(var j3 = 0; j3 < this.size; j3++)if (this.board[i3][j3] === this.board[i3 + 1][j3]) {\n                        this.status = \"playing\";\n                        return;\n                    }\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                this.status = \"playing\";\n                this.addRandomNumber();\n                this.addRandomNumber();\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.status = \"idle\";\n                this.board = this.defaultBoard.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$71511d61b312f219)(row);\n                });\n                this.score = 0;\n            }\n        },\n        {\n            key: \"addRandomNumber\",\n            value: function addRandomNumber() {\n                var emptyCells = [];\n                for(var i = 0; i < this.size; i++){\n                    for(var j = 0; j < this.size; j++)if (this.board[i][j] === 0) emptyCells.push([\n                        i,\n                        j\n                    ]);\n                }\n                if (emptyCells.length > 0) {\n                    var randomIndex = Math.floor(Math.random() * emptyCells.length);\n                    var _emptyCells_randomIndex = (0, $efec029548ccee7f$export$71511d61b312f219)(emptyCells[randomIndex], 2), x = _emptyCells_randomIndex[0], y = _emptyCells_randomIndex[1];\n                    this.board[x][y] = this.generateRandomNumber();\n                }\n            }\n        },\n        {\n            key: \"generateRandomNumber\",\n            value: function generateRandomNumber() {\n                return Math.random() < 0.1 ? 4 : 2;\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$elements = Array.from(document.querySelectorAll(\".field-cell\"));\nvar $197cd56b15c33885$var$button = document.querySelector(\".start\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$score = document.querySelector(\".game-score\");\n$197cd56b15c33885$var$button.addEventListener(\"click\", function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    if ($197cd56b15c33885$var$button.textContent === \"Start\") {\n        $197cd56b15c33885$var$messageStart.style.display = \"none\";\n        $197cd56b15c33885$var$button.innerHTML = \"Restart\";\n        $197cd56b15c33885$var$button.className = \"button restart\";\n    }\n    $197cd56b15c33885$var$updateInformation();\n    $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n});\ndocument.addEventListener(\"keydown\", function(e) {\n    switch(e.key){\n        case \"ArrowUp\":\n            $197cd56b15c33885$var$game.moveUp();\n            $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n            $197cd56b15c33885$var$updateInformation();\n            break;\n        case \"ArrowDown\":\n            $197cd56b15c33885$var$game.moveDown();\n            $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n            $197cd56b15c33885$var$updateInformation();\n            break;\n        case \"ArrowLeft\":\n            $197cd56b15c33885$var$game.moveLeft();\n            $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n            $197cd56b15c33885$var$updateInformation();\n            break;\n        case \"ArrowRight\":\n            $197cd56b15c33885$var$game.moveRight();\n            $197cd56b15c33885$var$updateBoard($197cd56b15c33885$var$game.getState());\n            $197cd56b15c33885$var$updateInformation();\n            break;\n    }\n});\nfunction $197cd56b15c33885$var$updateBoard(state) {\n    state.forEach(function(row, rowIndex) {\n        row.forEach(function(value, colIndex) {\n            var index = rowIndex * 4 + colIndex;\n            var element = $197cd56b15c33885$var$elements[index];\n            if (value !== 0) {\n                element.className = \"field-cell field-cell--\".concat(value);\n                element.textContent = \"\".concat(value);\n            } else {\n                element.className = \"field-cell\";\n                element.textContent = \"\";\n            }\n        });\n    });\n}\nfunction $197cd56b15c33885$var$updateInformation() {\n    if ($197cd56b15c33885$var$game.status === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.status === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    $197cd56b15c33885$var$score.innerHTML = \"\".concat($197cd56b15c33885$var$game.getScore());\n}\n\n})();\n//# sourceMappingURL=index.25a716ed.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class.js');\nconst game = new Game();\nconst elements = Array.from(document.querySelectorAll('.field-cell'));\nconst button = document.querySelector('.start');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst score = document.querySelector('.game-score');\n\nbutton.addEventListener('click', () => {\n  game.restart();\n  game.start();\n  messageWin.classList.add('hidden');\n  messageLose.classList.add('hidden');\n\n  if (button.textContent === 'Start') {\n    messageStart.style.display = 'none';\n    button.innerHTML = 'Restart';\n    button.className = 'button restart';\n  }\n  updateInformation();\n  updateBoard(game.getState());\n});\n\ndocument.addEventListener('keydown', (e) => {\n  switch (e.key) {\n    case 'ArrowUp':\n      game.moveUp();\n      updateBoard(game.getState());\n      updateInformation();\n      break;\n    case 'ArrowDown':\n      game.moveDown();\n      updateBoard(game.getState());\n      updateInformation();\n      break;\n    case 'ArrowLeft':\n      game.moveLeft();\n      updateBoard(game.getState());\n      updateInformation();\n      break;\n    case 'ArrowRight':\n      game.moveRight();\n      updateBoard(game.getState());\n      updateInformation();\n      break;\n  }\n});\n\nfunction updateBoard(state) {\n  state.forEach((row, rowIndex) => {\n    row.forEach((value, colIndex) => {\n      const index = rowIndex * 4 + colIndex;\n      const element = elements[index];\n\n      if (value !== 0) {\n        element.className = `field-cell field-cell--${value}`;\n        element.textContent = `${value}`;\n      } else {\n        element.className = 'field-cell';\n        element.textContent = '';\n      }\n    });\n  });\n}\n\nfunction updateInformation() {\n  if (game.status === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.status === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n  score.innerHTML = `${game.getScore()}`;\n}\n","'use strict';\n\nclass Game {\n\n  constructor(\n    initialState = [\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n      [0, 0, 0, 0],\n    ],\n  ) {\n    this.size = 4;\n    this.defaultBoard = initialState.map((row) => [...row]);\n    this.board = initialState.map((row) => [...row]);\n    this.status = 'idle';\n    this.score = 0;\n  }\n\n  moveLeft() {\n    this.move('left');\n  }\n\n  moveRight() {\n    this.move('right');\n  }\n\n  moveDown() {\n    this.move('down');\n  }\n\n  moveUp() {\n    this.move('up');\n  }\n\n  move(direction) {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    const prevBoard = this.board.map((row) => [...row]);\n\n    for (let i = 0; i < this.size; i++) {\n      let line = [];\n\n      for (let j = 0; j < this.size; j++) {\n        let row = i;\n        let col = j;\n\n        if (direction === 'right') {\n          col = this.size - 1 - j;\n        }\n\n        if (direction === 'down') {\n          row = this.size - 1 - j;\n          col = i;\n        }\n\n        if (direction === 'up') {\n          row = j;\n          col = i;\n        }\n\n        if (direction === 'left') {\n          row = i;\n          col = j;\n        }\n\n        const value = this.board[row][col];\n\n        if (value !== 0) {\n          line.push(value);\n        }\n      }\n\n      line = this.combineValues(line);\n\n      for (let j = 0; j < this.size; j++) {\n        let row = i;\n        let col = j;\n\n        if (direction === 'right') {\n          col = this.size - 1 - j;\n        }\n\n        if (direction === 'down') {\n          row = this.size - 1 - j;\n          col = i;\n        }\n\n        if (direction === 'up') {\n          row = j;\n          col = i;\n        }\n\n        if (direction === 'left') {\n          row = i;\n          col = j;\n        }\n\n        this.board[row][col] = line[j] || 0;\n      }\n    }\n\n    if (!this.isBoardEqual(prevBoard, this.board)) {\n      this.addRandomNumber();\n    }\n    this.getStatus();\n  }\n\n  combineValues(values) {\n    for (let i = 0; i < values.length - 1; i++) {\n      if (values[i] === values[i + 1]) {\n        values[i] *= 2;\n        this.score += values[i];\n        values.splice(i + 1, 1);\n      }\n    }\n\n    while (values.length < this.size) {\n      values.push(0);\n    }\n\n    return values;\n  }\n\n  isBoardEqual(board1, board2) {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (board1[i][j] !== board2[i][j]) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getStatus() {\n    if (this.status === 'playing') {\n      this.canMove();\n    }\n\n    return this.status;\n  }\n\n  canMove() {\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          this.status = 'playing';\n\n          return;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size - 1; j++) {\n        if (this.board[i][j] === this.board[i][j + 1]) {\n          this.status = 'playing';\n\n          return;\n        }\n      }\n    }\n\n    for (let i = 0; i < this.size - 1; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === this.board[i + 1][j]) {\n          this.status = 'playing';\n\n          return;\n        }\n      }\n    }\n\n    this.status = 'lose';\n  }\n\n  start() {\n    this.status = 'playing';\n    this.addRandomNumber();\n    this.addRandomNumber();\n  }\n\n  restart() {\n    this.status = 'idle';\n    this.board = this.defaultBoard.map((row) => [...row]);\n    this.score = 0;\n  }\n\n  addRandomNumber() {\n    const emptyCells = [];\n\n    for (let i = 0; i < this.size; i++) {\n      for (let j = 0; j < this.size; j++) {\n        if (this.board[i][j] === 0) {\n          emptyCells.push([i, j]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const randomIndex = Math.floor(Math.random() * emptyCells.length);\n      const [x, y] = emptyCells[randomIndex];\n\n      this.board[x][y] = this.generateRandomNumber();\n    }\n  }\n\n  generateRandomNumber() {\n    return Math.random() < 0.1 ? 4 : 2;\n  }\n}\n\nmodule.exports = Game;\n","function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _ as _array_with_holes } from \"./_array_with_holes.js\";\nimport { _ as _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _ as _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _ as _array_without_holes } from \"./_array_without_holes.js\";\nimport { _ as _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _ as _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _ as _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _ as _array_like_to_array } from \"./_array_like_to_array.js\";\n\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$71511d61b312f219","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$71511d61b312f219","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$71511d61b312f219","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","size","defaultBoard","map","row","board","status","score","key","value","move","direction","prevBoard","line","j","col","push","combineValues","j1","row1","col1","isBoardEqual","addRandomNumber","getStatus","values","splice","board1","board2","canMove","i1","i2","j2","i3","j3","emptyCells","randomIndex","Math","floor","random","_emptyCells_randomIndex","_s","_e","_i","_arr","_n","_d","next","done","err","x","y","generateRandomNumber","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","$197cd56b15c33885$var$elements","document","querySelectorAll","$197cd56b15c33885$var$button","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$score","$197cd56b15c33885$var$updateBoard","state","forEach","rowIndex","colIndex","element","className","concat","textContent","$197cd56b15c33885$var$updateInformation","classList","remove","innerHTML","getScore","addEventListener","restart","start","add","style","display","getState","e","moveUp","moveDown","moveLeft","moveRight"],"version":3,"file":"index.25a716ed.js.map"}